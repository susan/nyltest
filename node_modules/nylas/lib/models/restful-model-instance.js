"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var RestfulModelInstance =
/*#__PURE__*/
function () {
  function RestfulModelInstance(modelClass, connection) {
    _classCallCheck(this, RestfulModelInstance);

    this.modelClass = modelClass;
    this.connection = connection;

    if (!(this.connection instanceof require('../nylas-connection'))) {
      throw new Error('Connection object not provided');
    }

    if (!this.modelClass) {
      throw new Error('Model class not provided');
    }
  }

  _createClass(RestfulModelInstance, [{
    key: "path",
    value: function path() {
      return "/".concat(this.modelClass.endpointName);
    }
  }, {
    key: "get",
    value: function get() {
      var _this = this;

      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return this.connection.request({
        method: 'GET',
        path: this.path(),
        qs: params
      }).then(function (json) {
        var model = new _this.modelClass(_this.connection, json);
        return Promise.resolve(model);
      });
    }
  }]);

  return RestfulModelInstance;
}();

exports.default = RestfulModelInstance;