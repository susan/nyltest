"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _restfulModel = _interopRequireDefault(require("./restful-model"));

var _attributes = _interopRequireDefault(require("./attributes"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var EmailAddress =
/*#__PURE__*/
function (_RestfulModel) {
  _inherits(EmailAddress, _RestfulModel);

  function EmailAddress() {
    _classCallCheck(this, EmailAddress);

    return _possibleConstructorReturn(this, _getPrototypeOf(EmailAddress).apply(this, arguments));
  }

  _createClass(EmailAddress, [{
    key: "toJSON",
    value: function toJSON() {
      var json = {
        type: this.type,
        email: this.email
      };
      return json;
    }
  }]);

  return EmailAddress;
}(_restfulModel.default);

EmailAddress.collectionName = 'email_addresses';
EmailAddress.attributes = _objectSpread({}, _restfulModel.default.attributes, {
  type: _attributes.default.String({
    modelKey: 'type'
  }),
  email: _attributes.default.String({
    modelKey: 'email'
  })
});

var IMAddress =
/*#__PURE__*/
function (_RestfulModel2) {
  _inherits(IMAddress, _RestfulModel2);

  function IMAddress() {
    _classCallCheck(this, IMAddress);

    return _possibleConstructorReturn(this, _getPrototypeOf(IMAddress).apply(this, arguments));
  }

  _createClass(IMAddress, [{
    key: "toJSON",
    value: function toJSON() {
      var json = {
        type: this.type,
        im_address: this.imAddress
      };
      return json;
    }
  }]);

  return IMAddress;
}(_restfulModel.default);

IMAddress.collectionName = 'im_addresses';
IMAddress.attributes = _objectSpread({}, _restfulModel.default.attributes, {
  type: _attributes.default.String({
    modelKey: 'type'
  }),
  imAddress: _attributes.default.String({
    modelKey: 'imAddress',
    jsonKey: 'im_address'
  })
});

var PhysicalAddress =
/*#__PURE__*/
function (_RestfulModel3) {
  _inherits(PhysicalAddress, _RestfulModel3);

  function PhysicalAddress() {
    _classCallCheck(this, PhysicalAddress);

    return _possibleConstructorReturn(this, _getPrototypeOf(PhysicalAddress).apply(this, arguments));
  }

  _createClass(PhysicalAddress, [{
    key: "toJSON",
    value: function toJSON() {
      var json = {
        type: this.type,
        format: this.format
      };

      if (this.format == 'unstructured') {
        json.address = this.address;
      } else {
        json.street_address = this.streetAddress;
        json.postal_code = this.postalCode;
        json.state = this.state;
        json.city = this.city;
        json.country = this.country;
      }

      return json;
    }
  }]);

  return PhysicalAddress;
}(_restfulModel.default);

PhysicalAddress.collectionName = 'physical_addresses';
PhysicalAddress.attributes = _objectSpread({}, _restfulModel.default.attributes, {
  type: _attributes.default.String({
    modelKey: 'type'
  }),
  format: _attributes.default.String({
    modelKey: 'format'
  }),
  address: _attributes.default.String({
    modelKey: 'address'
  }),
  streetAddress: _attributes.default.String({
    modelKey: 'streetAddress',
    jsonKey: 'street_address'
  }),
  city: _attributes.default.String({
    modelKey: 'city'
  }),
  postalCode: _attributes.default.String({
    modelKey: 'postalCode',
    jsonKey: 'postal_code'
  }),
  state: _attributes.default.String({
    modelKey: 'state'
  }),
  country: _attributes.default.String({
    modelKey: 'country'
  })
});

var PhoneNumber =
/*#__PURE__*/
function (_RestfulModel4) {
  _inherits(PhoneNumber, _RestfulModel4);

  function PhoneNumber() {
    _classCallCheck(this, PhoneNumber);

    return _possibleConstructorReturn(this, _getPrototypeOf(PhoneNumber).apply(this, arguments));
  }

  _createClass(PhoneNumber, [{
    key: "toJSON",
    value: function toJSON() {
      var json = {
        type: this.type,
        number: this.number
      };
      return json;
    }
  }]);

  return PhoneNumber;
}(_restfulModel.default);

PhoneNumber.collectionName = 'phone_numbers';
PhoneNumber.attributes = _objectSpread({}, _restfulModel.default.attributes, {
  type: _attributes.default.String({
    modelKey: 'type'
  }),
  number: _attributes.default.String({
    modelKey: 'number'
  })
});

var WebPage =
/*#__PURE__*/
function (_RestfulModel5) {
  _inherits(WebPage, _RestfulModel5);

  function WebPage() {
    _classCallCheck(this, WebPage);

    return _possibleConstructorReturn(this, _getPrototypeOf(WebPage).apply(this, arguments));
  }

  _createClass(WebPage, [{
    key: "toJSON",
    value: function toJSON() {
      var json = {
        type: this.type,
        url: this.url
      };
      return json;
    }
  }]);

  return WebPage;
}(_restfulModel.default);

WebPage.collectionName = 'web_pages';
WebPage.attributes = _objectSpread({}, _restfulModel.default.attributes, {
  type: _attributes.default.String({
    modelKey: 'type'
  }),
  url: _attributes.default.String({
    modelKey: 'url'
  })
});

var Groups =
/*#__PURE__*/
function (_RestfulModel6) {
  _inherits(Groups, _RestfulModel6);

  function Groups() {
    _classCallCheck(this, Groups);

    return _possibleConstructorReturn(this, _getPrototypeOf(Groups).apply(this, arguments));
  }

  _createClass(Groups, [{
    key: "toJSON",
    value: function toJSON() {
      var json = _get(_getPrototypeOf(Groups.prototype), "toJSON", this).apply(this, arguments);

      json['object'] = 'contact_group';
      return json;
    }
  }]);

  return Groups;
}(_restfulModel.default);

Groups.collectionName = 'groups';
Groups.attributes = _objectSpread({}, _restfulModel.default.attributes, {
  name: _attributes.default.String({
    modelKey: 'name'
  }),
  path: _attributes.default.String({
    modelKey: 'path'
  })
});

var Contact =
/*#__PURE__*/
function (_RestfulModel7) {
  _inherits(Contact, _RestfulModel7);

  function Contact() {
    _classCallCheck(this, Contact);

    return _possibleConstructorReturn(this, _getPrototypeOf(Contact).apply(this, arguments));
  }

  _createClass(Contact, [{
    key: "save",
    value: function save() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
      return this._save(params, callback);
    }
  }, {
    key: "getPicture",
    value: function getPicture() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
      return this._get(params, callback, '/picture');
    }
  }]);

  return Contact;
}(_restfulModel.default);

exports.default = Contact;
Contact.collectionName = 'contacts';
Contact.attributes = _objectSpread({}, _restfulModel.default.attributes, {
  givenName: _attributes.default.String({
    modelKey: 'givenName',
    jsonKey: 'given_name'
  }),
  middleName: _attributes.default.String({
    modelKey: 'middleName',
    jsonKey: 'middle_name'
  }),
  surname: _attributes.default.String({
    modelKey: 'surname'
  }),
  suffix: _attributes.default.String({
    modelKey: 'suffix'
  }),
  nickname: _attributes.default.String({
    modelKey: 'nickname'
  }),
  birthday: _attributes.default.String({
    modelKey: 'birthday'
  }),
  companyName: _attributes.default.String({
    modelKey: 'companyName',
    jsonKey: 'company_name'
  }),
  jobTitle: _attributes.default.String({
    modelKey: 'jobTitle',
    jsonKey: 'job_title'
  }),
  managerName: _attributes.default.String({
    modelKey: 'managerName',
    jsonKey: 'manager_name'
  }),
  officeLocation: _attributes.default.String({
    modelKey: 'officeLocation',
    jsonKey: 'office_location'
  }),
  notes: _attributes.default.String({
    modelKey: 'notes'
  }),
  pictureUrl: _attributes.default.String({
    modelKey: 'pictureUrl',
    jsonKey: 'picture_url'
  }),
  emailAddresses: _attributes.default.Collection({
    modelKey: 'emailAddresses',
    jsonKey: 'emails',
    itemClass: EmailAddress
  }),
  imAddresses: _attributes.default.Collection({
    modelKey: 'imAddresses',
    jsonKey: 'im_addresses',
    itemClass: IMAddress
  }),
  physicalAddresses: _attributes.default.Collection({
    modelKey: 'physicalAddresses',
    jsonKey: 'physical_addresses',
    itemClass: PhysicalAddress
  }),
  phoneNumbers: _attributes.default.Collection({
    modelKey: 'phoneNumbers',
    jsonKey: 'phone_numbers',
    itemClass: PhoneNumber
  }),
  webPages: _attributes.default.Collection({
    modelKey: 'webPages',
    jsonKey: 'web_pages',
    itemClass: WebPage
  }),
  groups: _attributes.default.Collection({
    modelKey: 'groups',
    itemClass: Groups
  }),
  source: _attributes.default.String({
    modelKey: 'source'
  })
});